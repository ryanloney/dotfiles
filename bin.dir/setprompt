#!/bin/csh
# Includes current git branch in tcsh prompt.
#
# Your prompt can look like this:
#
#   [myhost.com ~/repos/foo (master)]
#
# USAGE:
#
# 1) Save this script as ~/bin/setprompt
# 2) In .cshrc, include this line:
#
#      alias precmd "source ~/bin/setprompt"
#
# AUTHOR
#
#   Original from http://acts.as.streeteasy.com/archives/2007/12/19/git_in_your_prompt/
#   Modified for tcsh by Geoffrey Grosenbach http://peepcode.com

set ptail = "Â»"

if ! $?ITERM_PROFILE then
	set profile="solarized-light"
else
	set profile=$ITERM_PROFILE
endif

# Change the color in the prompt based on the ambient profile

switch ($profile)
	case 'solarized-dark':
		set color_path="%{\033[0;40m%}"
		breaksw;
	case 'solarized-light':
		set color_path="%{\033[0;47m%}"
		breaksw;
	default:
		set color_path="%{\033[0;47m%}"
		breaksw;
endsw

set color_gray="%{\033[1;36m%}"
set color_normal="%{\033[0m%}"
set color_history="%{\033[0;35m%}"

set GIT_PROMPT=`git status |& git-prompt.awk`

# history time path
#set p1="%B%h%b %t:%B$color_path%~$color_normal%b "

# full path after home
# set p1="%B%h%b %m:%B$color_path%~$color_normal%b "

# show only 3 trailing folders http://www.nparikh.org/unix/prompt.php#tcsh
set p1="%B%h%b %m:%B$color_path%c2$color_normal%b "

# history time computer path
# set p1="%h %t %B%m%b:%B$color_path%~$color_normal%b "

set prompt="${color_history}${p1}${color_gray}$GIT_PROMPT${color_normal}${ptail} "

